name: Elixir CI

on: pull_request

jobs:
  build:

    runs-on: ubuntu-latest

    container:
      image: elixir:1.9.1-slim

    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Cache dependencies
        id: cache-deps
        uses: actions/cache@v1
        with:
          path: deps
          key: ${{ runner.os }}-mix-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}
          restore-keys: |
            ${{ runner.os }}-mix-

      - name: Install dependencies
        if: steps.cache-deps.outputs.cache-hit != 'true'
        run: |
          mix local.rebar --force
          mix local.hex --force
          mix deps.get

  format:
    needs: build
    
    runs-on: ubuntu-latest

    container:
      image: elixir:1.9.1-slim

    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Format
        run: mix format
  test:
    needs: build
    
    runs-on: ubuntu-latest
    
    services:
      redisgraph:
        image: redislabs/redisgraph
        ports:
          - 6379/tcp
    
    container:
      image: elixir:1.9.1-slim

    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Cache dependencies
        id: cache-deps
        uses: actions/cache@v1
        with:
          path: deps
          key: ${{ runner.os }}-mix-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}
          restore-keys: |
            ${{ runner.os }}-mix-

      - name: Install dependencies
        if: steps.cache-deps.outputs.cache-hit != 'true'
        run: |
          mix local.rebar --force
          mix local.hex --force
          mix deps.get
      
      - name: Run Tests
        run: mix test
        
  dialyzer:
    needs: build
    runs-on: ubuntu-latest
   
    container:
      image: elixir:1.9.1-slim

    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Cache dependencies
        id: cache-deps
        uses: actions/cache@v1
        with:
          path: deps
          key: ${{ runner.os }}-mix-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}
          restore-keys: |
            ${{ runner.os }}-mix-

      - name: Install dependencies
        if: steps.cache-deps.outputs.cache-hit != 'true'
        run: |
          mix local.rebar --force
          mix local.hex --force
          mix deps.get
      
      - name: Run Dialyzer
        run: mix dialyzer
